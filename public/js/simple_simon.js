'use strict'
// This sequence will produce a random number between 1 and 4 random number 
// generator 

// nextSequence will allows us to add the next sequence of events to our already generated
//random number and append future events until sequence is broken.

// // The switch statement allows us to take the value of the random number represented by sequence
// // and add/produce a value color as defined by the case #. The case number correlates with the
// // designated button value in html.

var sequence = Math.floor(Math.random() * 4) + 1
	var nextSequence = [];
	nextSequence.push(sequence);
	// console.log(nextSequence)

//  //  //  //  //  //  //  //  //  // // // //  // //  //  //  // // // // // // // // // // 
//  var blink allows us to add a blinker feature to the game
//  this feature allows users to view the button they are going to select

var blink = function (button, blinker) {	
		$(button).animate({
			opacity: 3
		}, blinker).animate({
			opacity: .50
		}, blinker);
	};
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 	
// var event gives us the number generated by the variable sequence and plugs it into 
// the html buttons using the numeric value of that button and giving us a color
// that is designated by the console.log. 

var level = 0;
var buttonSelect = function (nextSequence) {
	setTimeout(function() {

	switch (sequence) {
		case 1:
			blink("#button1", 500);
	 		console.log(sequence);
			console.log("I'm red.");
			break;

		case 2:
			blink("#button2", 500);
	 		console.log(sequence);
			console.log("I'm green.");
			break;
		

		case 3:		
			blink("#button3", 500);
	 		console.log(sequence);
			console.log("I'm blue.");
			break;

		case 4:
			blink("#button4", 500);
	 		console.log(sequence);
			console.log("I'm yellow");
			break;		

	};
// // // // // // // / // // // // // // // // // // // // // // // // // // / // // // // //
// keeps track of what level you're  in and sequences
	level++;
		if (level < nextSequence.length) {
			buttonSelect(nextSequence);
		} else {
			buttonClicked();
		};
	}, 1500);
};

// // // // // // // / // // // // // // // // // // // // // // // // // // / // // // // //
// players selection of button via the click feature

var buttonClicked = function() {
		$(".color").on("click", function(){
			var buttonValue = parseInt($(this).attr("value"));
			var buttonChange = "#" + $(this).attr("id");
			blink(buttonChange, 100);
			$(".color").off("click");
			buttonCheck(buttonValue);
		});
	};
// // // // // // // / // // // // // // // // // // // // // // // // // // / // // // // //
// LEVEL UP SEQUENCE: adds new sequences to the level you're on and 

var variousSequence = function (event) {
		sequence = Math.floor(Math.random() * 4) + 1;
		console.log("this is sequence" + variousSequence);
		nextSequence.push(sequence);
		console.log(nextSequence);

		buttonSelect(nextSequence);
	};
	$("#power").on("click", function(){
		variousSequence();
		$('#power').off('click');
	});
// // // // // // // / // // // // // // // // // // // // // // // // // // / // // // // //
// 

var count = 0;
	var buttonCheck = function(buttonClicked){
		if (buttonClicked === nextSequence[count]) {
			count++;
			if (count < nextSequence.length) {
				buttonClicked();
			} else {
				level = 0;
				count = 0;
				variousSequence();
			};
		} else {
			setTimeout(function(){
				location.reload();
			}, 5000);
		};
	};

// My original thought was create an order that would be repeated and stepped up, but that idea proved to be false. 
// what I thought was working merely generating four numbers and the code would execute, but falling through my 
// switch statement only to log a four number sequence.  
// SCRAP THIS! IT WAS GOOD THOUGHT PROCESS TO GET THE JUICES FLOWING BUT WON'T WORK!!!

// function startNext(){
// 	var secondSequence = document.getElementById("button");
// 		if (firstSequence == firstSequence) {
// 			return startNext
// 		} else {
// 			alert("Game Over! Try Again!")
// 	}
// }

// ////// Trying to figure out the add the event listener///////
// var round2 = document.getElementById(" ");
// 	// startNext.addEventListener("click", startNext, false);

// // var startNextSequence = 
// console.log(firstSequence)

// 	var secondSequence = Math.floor(Math.random() * 4) + 1 
// 		// secondSequence = ['',''];   This isn't working, it's just generating a second number
// 		// as the operation continues down the execution. 
// 		// secondSequence = secondSequence.push(firstSequence);

	  

// switch (secondSequence) {
// 	case 1:
// 		console.log("I'm red.");
// 		break;
// 	case 2:
// 		console.log("I'm green.");
// 		break;
// 	case 3:
// 		console.log("I'm blue.");
// 		break;
// 	case 4:
// 		console.log("I'm yellow");
// 		break;

// } console.log(secondSequence);

//    var thirdSequence = Math.floor(Math.random() * 4) + 1 
//    var thirdSequence = Math.floor(Math.random() * 4) + 1 
// 		thirdSequence = ['',''];
// 		thirdSequence = thirdSequence.push(firstSequence, secondSequence);

// switch (thirdSequence) {
// 	case 1:
// 		console.log("I'm red.");
// 		break;
// 	case 2:
// 		console.log("I'm green.");
// 		break;
// 	case 3:
// 		console.log("I'm blue.");
// 		break;
// 	case 4:
// 		console.log("I'm yellow");
// 		break;

// }  console.log(thirdSequence)
// // I thought [console.log(firstSequence && secondSequence && thirdSequence && fourthSequence) ] this would print 1, 2 and 3 sequences into the console log. it doesn't,
// // I'll have to figure out another way to get the desired result console.log(firstSequence && secondSequence && thirdSequence)

// var fourthSequence = Math.floor(Math.random() * 4) + 1 
// // console.log(fourthSequence)

// switch (fourthSequence) {
// 	case 1:
// 		console.log("I'm red.");
// 		break;
// 	case 2:
// 		console.log("I'm green.");
// 		break;
// 	case 3:
// 		console.log("I'm blue.");
// 		break;
// 	case 4:
// 		console.log("I'm yellow");
// 		break;

// } console.log(fourthSequence)
// // console.log(firstSequence && secondSequence && thirdSequence && fourthSequence) 





