

'use strict'

// sequence will produce a random number between 1 and 4 random number 
// generator 

// nextSequence will allows us to add the next sequence of events to our already generated
//random number and append future events until sequence is broken.



    var sequence; 
 	var nextSequence = [];
//		nextSequence.push(sequence);
//     	console.log(sequence)
	
	

	// console.log(nextSequence)

//  //  //  //  //  //  //  //  //  // // // //  // //  //  //  // // // // // // // // // // 
//  var blink allows us to add a blinker feature to the game
//  this feature allows users to view the button they are going to select

var blink = function (button, blinkers) {	
		$(button).animate({
			opacity: .25
		}, blinkers).animate({
			opacity: 1
		}, blinkers);
	};
	// console.log("blinky")
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 	
// var level gives us the number generated by the variable sequence and plugs it into 
// the html buttons using the numeric value of that button and giving us a color
// that is designated by the console.log. 

// The switch statement allows us to take the value of the random number represented by sequence
// // and add/produce a value color as defined by the case #. The case number correlates with the
// // designated button value in html.

var level = 0;
var buttonSelect = function(nextSequence) {
	setTimeout(function() {

	switch (nextSequence[level]) {
		case 1:
			blink("#button1", 500);
			console.log("I'm red.");
			break;

		case 2:
			blink("#button2", 500);
			console.log("I'm green.");
			break;
		

		case 3:		
			blink("#button3", 500);
			console.log("I'm blue.");
			break;

		case 4:
			blink("#button4", 500);
			console.log("I'm yellow");
			break;		

	};
// // // // // // // / // // // // // // // // // // // // // // // // // // / // // // // //
// keeps track of what level you're  in and sequences
	level++;

		if (level < nextSequence.length) {
			buttonSelect(nextSequence);
		} else {
			player();
		};
	}, 1500);
};
	
// // // // // // // / // // // // // // // // // // // // // // // // // // / // // // // //
// players selection of button via the click feature

 var player = function(player) {
		$(".color").on("click", function(){
			var buttonValue = parseInt($(this).attr("value"));
			var buttonChange = "#" + $(this).attr("id");
			blink(buttonChange, 100);
			// $(".color").off("click");
			compare(buttonValue);

		});
	};
// // // // // // // / // // // // // // // // // // // // // // // // // // / // // // // //
// LEVEL UP SEQUENCE: adds new sequences to the level you're on and 

var variousSequence = function (event) {
	sequence = Math.floor(Math.random() * 4) + 1; 
	console.log("this is sequence" + variousSequence);
	nextSequence.push(sequence);
	console.log(nextSequence);
	
		buttonSelect(nextSequence);
};

$("#power").on("click", function(){
	variousSequence();

});
	

// // // // // // // / // // // // // // // // // // // // // // // // // // / // // // // //
// keeps track of your count and determines what your next move should be
 
var count = 0;
	var compare= function(player){
		if (player === nextSequence[count]) {
			count++;
			if (count < nextSequence.length) {
				player();
			} else {
				level = 0;
				count = 0;
				variousSequence();
			};
		} else {
			setTimeout(function(){
				location.reload();
			}, 5000);
				alert("Game Over! Try Again...")
			// console.log(nextSequence);	
		};

	};

		